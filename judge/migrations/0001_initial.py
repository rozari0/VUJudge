# Generated by Django 5.1.3 on 2024-11-28 16:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the contest", max_length=100
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(help_text="The start time of the contest"),
                ),
                (
                    "duration",
                    models.IntegerField(
                        default=120, help_text="The duration of the contest (minutes)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the language", max_length=100
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="",
                        help_text="The version of the language",
                        max_length=100,
                    ),
                ),
                (
                    "args",
                    models.CharField(
                        blank=True,
                        help_text="The arguments that are passed to the compiler/interpreter",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True, help_text="Whether the language is active"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the problem", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="The description of the problem [Markdown]"
                    ),
                ),
                (
                    "difficulty",
                    models.IntegerField(
                        choices=[
                            (1, "Super Easy"),
                            (2, "Easy"),
                            (3, "Medium"),
                            (4, "Hard"),
                            (5, "Super Hard"),
                        ],
                        help_text="The difficulty of the problem",
                    ),
                ),
                (
                    "time_limit",
                    models.IntegerField(
                        default=2,
                        help_text="The time limit of the problem (in seconds)",
                    ),
                ),
                (
                    "memory_limit",
                    models.IntegerField(
                        default=64,
                        help_text="The memory limit of the problem (in megabytes)",
                    ),
                ),
                (
                    "penalty_time",
                    models.IntegerField(
                        default=1,
                        help_text="The penalty time of the problem (in minutes)",
                    ),
                ),
                (
                    "is_open",
                    models.BooleanField(
                        default=True, help_text="Whether the problem is open"
                    ),
                ),
                (
                    "contest",
                    models.ForeignKey(
                        help_text="The contest",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="judge.contest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeaderBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "penalty",
                    models.IntegerField(
                        default=0, help_text="The penalty time of the problem"
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        default=0, help_text="The score of the contest"
                    ),
                ),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="judge.contest"
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "solved_problems",
                    models.ManyToManyField(blank=True, to="judge.problem"),
                ),
            ],
            options={
                "ordering": ["-score", "penalty", "-id"],
            },
        ),
        migrations.CreateModel(
            name="ProblemSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("S", "Succeed"),
                            ("R", "Running"),
                            ("RE", "RuntimeError"),
                            ("ME", "Memory Limit Exceeded"),
                            ("U", "Unmatched"),
                            ("E", "Error"),
                        ],
                        default="R",
                        help_text="The status of the submission",
                        max_length=2,
                    ),
                ),
                (
                    "user_solution",
                    models.TextField(help_text="The solution for this problem."),
                ),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="judge.language"
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="judge.problem",
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("case_no", models.PositiveIntegerField(help_text="The case number")),
                ("input", models.TextField(help_text="The input of the problem")),
                (
                    "output",
                    models.TextField(help_text="Expected output of the problem"),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_cases",
                        to="judge.problem",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestCaseSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=False, help_text="Whether the test case is successful"
                    ),
                ),
                (
                    "output",
                    models.TextField(
                        blank=True,
                        help_text="Returned Output from Execution.",
                        null=True,
                    ),
                ),
                (
                    "base_submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_case_submissions",
                        to="judge.problemsubmission",
                    ),
                ),
                (
                    "test_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="judge.testcase"
                    ),
                ),
            ],
        ),
    ]
